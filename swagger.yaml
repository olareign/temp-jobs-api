openapi: 3.0.0
info:
  title: Jobs API
  contact: {}
  version: '1.0'
servers:
- url: https://jobs-inventory.onrender.com/api/v1
  variables: {}
paths:
  /auth/register:
    post:
      tags:
      - Auth
      summary: Register
      operationId: Register
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RegisterRequest'
              - example:
                  name: susan
                  email: anna@gmail.com
                  password: secrets
            example:
              name: susan
              email: anna@gmail.com
              password: secrets
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
      - Auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/LoginUserRequest'
              - example:
                  email: anna@gmail.com
                  password: secrets
            example:
              email: anna@gmail.com
              password: secrets
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
      - Jobs
      summary: Create Jobs
      operationId: CreateJobs
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateJobsRequest'
              - example:
                  company: netfix
                  position: back-end developer
            example:
              company: netfix
              position: back-end developer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    get:
      tags:
      - Jobs
      summary: Get All job
      operationId: GetAlljob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    delete:
      tags:
      - Jobs
      summary: Delete Job
      operationId: DeleteJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The jobs ID
    get:
      tags:
      - Jobs
      summary: Get Single job
      operationId: GetSinglejob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
      
    patch:
      tags:
      - Jobs
      summary: Update Jobs
      operationId: UpdateJobs
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateJobsRequest'
              - example:
                  company: random
                  position: fullstack developer
            example:
              company: random
              position: fullstack developer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
components:
  schemas:
    RegisterRequest:
      title: RegisterRequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: susan
        email: anna@gmail.com
        password: secrets
    LoginUserRequest:
      title: LoginUserRequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: anna@gmail.com
        password: secrets
    CreateJobsRequest:
      title: CreateJobsRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: netfix
        position: back-end developer
    UpdateJobsRequest:
      title: UpdateJobsRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: random
        position: fullstack developer
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Misc
  description: ''
- name: Auth
  description: ''
- name: Jobs
  description: ''